/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UserInterface.SystemWorkArea.Patient;

import java.awt.Color;
import java.util.Map;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import JAVAMainModel.City;
import JAVAMainModel.Community;
import JAVAMainModel.Patient;
import JAVAMainModel.PatientDirectory;
import JAVAMainModel.PersonDirectory;
/**
 *
 * @author adity
 */
public class SystemUpdatePatient extends javax.swing.JFrame {

    /**
     * Creates new form SystemUpdatePatient
     */
    PersonDirectory personDirectory;
    PatientDirectory patientDirectory;
    boolean emptyValidationStatus = true;
    boolean validationCheck = true;
    
    
    public SystemUpdatePatient(PersonDirectory personDirectory,PatientDirectory patientDirectory) {
        initComponents();
        this.personDirectory = personDirectory;
        this.patientDirectory = patientDirectory;
        initCityCmbx();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblSearchPatientID = new javax.swing.JLabel();
        txtSearchPatientID = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        lblPersonalInfo = new javax.swing.JLabel();
        lblContactInfo = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        lblHeight = new javax.swing.JLabel();
        lblWeight = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        txtHeight = new javax.swing.JTextField();
        txtWeight = new javax.swing.JTextField();
        CBoxGender = new javax.swing.JComboBox<>();
        lblAptNo = new javax.swing.JLabel();
        lblStreet = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        lblState = new javax.swing.JLabel();
        lblCommunity = new javax.swing.JLabel();
        lblMobileNo = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        txtAptNo = new javax.swing.JTextField();
        txtStreet = new javax.swing.JTextField();
        CBoxCity = new javax.swing.JComboBox<>();
        CBoxState = new javax.swing.JComboBox<>();
        CBoxCommunity = new javax.swing.JComboBox<>();
        txtMobileNo = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Update Patient Information");

        lblSearchPatientID.setText("Search patient By ID:");

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        lblPersonalInfo.setText("Personal Information");

        lblContactInfo.setText("Contact Information");

        lblName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblName.setText("Name");

        lblAge.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAge.setText("Age");

        lblHeight.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblHeight.setText("Height");

        lblWeight.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblWeight.setText("Weight");

        lblGender.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblGender.setText("Gender");

        CBoxGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblAptNo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAptNo.setText("Apartment No.");

        lblStreet.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblStreet.setText("Street");

        lblCity.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCity.setText("City");

        lblState.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblState.setText("State");

        lblCommunity.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCommunity.setText("Community");

        lblMobileNo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblMobileNo.setText("Mobile No.");

        lblEmail.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblEmail.setText("Email");

        CBoxCity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        CBoxState.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        CBoxCommunity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        CBoxCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBoxCommunityActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update Information");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblGender, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblAge, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtName)
                                            .addComponent(txtAge)
                                            .addComponent(txtHeight)
                                            .addComponent(txtWeight)
                                            .addComponent(CBoxGender, 0, 186, Short.MAX_VALUE))
                                        .addGap(271, 271, 271))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(106, 106, 106)
                                        .addComponent(btnUpdate)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblStreet, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblAptNo)
                                    .addComponent(lblCity, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblState, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblCommunity)
                                    .addComponent(lblMobileNo)
                                    .addComponent(lblEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblSearchPatientID)
                                .addGap(18, 18, 18)
                                .addComponent(txtSearchPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAptNo)
                            .addComponent(txtStreet)
                            .addComponent(CBoxCity, 0, 257, Short.MAX_VALUE)
                            .addComponent(CBoxState, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CBoxCommunity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtMobileNo)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSearch)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtEmail))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(lblPersonalInfo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblContactInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSearchPatientID)
                    .addComponent(txtSearchPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPersonalInfo)
                    .addComponent(lblContactInfo))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAptNo)
                    .addComponent(txtAptNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAge)
                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblStreet)
                    .addComponent(txtStreet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHeight)
                    .addComponent(txtHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCity)
                    .addComponent(CBoxCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblWeight)
                    .addComponent(txtWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblState)
                    .addComponent(CBoxState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGender)
                    .addComponent(CBoxGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCommunity)
                    .addComponent(CBoxCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMobileNo)
                    .addComponent(txtMobileNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmail)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        int patientId = Integer.parseInt( txtSearchPatientID.getText());
         
         for(Patient p: patientDirectory.getPatients()){
             
             if(patientId == p.getPatientId()){
                 txtName.setText(p.getPersonName());
                 txtAge.setText(String.valueOf(p.getAge()));
                 CBoxGender.setSelectedItem(p.getSex());
                 txtHeight.setText(String.valueOf(p.getHeight()));
                 txtWeight.setText(String.valueOf(p.getWeight()));
                 
                 txtAptNo.setText(String.valueOf(p.getHouse().getAptNum()));
                 txtStreet.setText(String.valueOf(p.getHouse().getStreetAddress()));
                 
                String city = null;
                String community = null;              
                Map<String, String> communityMap = p.getHouse().getCommunity().getCommunity();            
                for(Map.Entry m: communityMap.entrySet()){  
                    city = m.getKey().toString();
                    community = m.getValue().toString();
                }  
                 
                CBoxCity.setSelectedItem(city);
                CBoxCommunity.setSelectedItem(community);
                
                txtEmail.setText(p.getEmail());
                txtMobileNo.setText(String.valueOf(p.getMobileNumber()));
                
            
             }
                 
         }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void CBoxCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBoxCommunityActionPerformed
        // TODO add your handling code here:
        initCommunityCmbx();
    }//GEN-LAST:event_CBoxCommunityActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:try{
            try{
                if(EmpytyFieldValidation()){

                if(RegexValidation()){

                   
                }
                else{
                    JOptionPane.showMessageDialog(this,"Some Error in entered data.Please check over the red fields to know more.");
                    validationCheck=true;
                }
            }
            else{
                JOptionPane.showMessageDialog(this,"Some Error in entered data. Please check over the red fields to know more.");
                emptyValidationStatus=true;
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this,"Patient not registered, Try again");
            System.out.println(e.toString());
            emptyValidationStatus=true;
            if(personDirectory.getPersonDirectory().size()>0)
            personDirectory.getPersonDirectory().remove(personDirectory.getPersonDirectory().size() - 1);
        }
            
    }//GEN-LAST:event_btnUpdateActionPerformed
private boolean RegexValidation() {
        if(!txtName.getText().matches("^[a-zA-Z ]+$"))
        {
            txtName.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtName.setToolTipText("Please enter only characters and space.");
            validationCheck=false;
        }
        
        if(txtName.getText().matches("^[a-zA-Z ]+$"))
        {
            txtName.setBorder(BorderFactory.createLineBorder(Color.BLUE, 0));
        }
        
        
        if(!txtAge.getText().matches("\\b\\d+\\b"))
        {
            txtAge.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtAge.setToolTipText("Pleae enter only numbers");
            validationCheck=false;
        }
        
        if(txtAge.getText().matches("\\b\\d+\\b"))
        {
            txtAge.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }
        
        if(!txtHeight.getText().matches("([0-9]*[.]*[0-9])"))
        {
            txtHeight.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtHeight.setToolTipText("Pleae enter only numbers");
            validationCheck=false;
        }
        
        if(txtHeight.getText().matches("([0-9]*[.]*[0-9])"))
        {
            txtHeight.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }
        
        if(!txtWeight.getText().matches("([0-9]*[.]*[0-9])"))
        {
            txtWeight.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtWeight.setToolTipText("Pleae enter only numbers");
            validationCheck=false;
        }
        
        if(txtWeight.getText().matches("([0-9]*[.]*[0-9])"))
        {
            txtWeight.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }
        
        if(!txtEmail.getText().matches("^[A-Za-z0-9+_.-]+@(.+)$"))
        {
            txtEmail.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtEmail.setToolTipText("Please enter a valid Email Address in the form abc@xyy.com");
            validationCheck=false;
        }
        
        if(txtEmail.getText().matches("^[A-Za-z0-9+_.-]+@(.+)$"))
        {
            txtEmail.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }
        
        if(!txtMobileNo.getText().matches("^[0-9]{10}$"))
        {
            txtMobileNo.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtMobileNo.setToolTipText("Please enter a 10 digit number");
            validationCheck=false;
        }
        
        if(txtMobileNo.getText().matches("^[0-9]{10}$"))
        {
            txtMobileNo.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }
        return validationCheck;
    }

private boolean EmpytyFieldValidation() {
        if(txtName.getText().equals(null) || txtName.getText().trim().isEmpty() )
        {
            txtName.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtName.setToolTipText("This Field Cannot be empty");
            emptyValidationStatus= false;
        }
        if(!txtName.getText().equals(null) && !txtName.getText().trim().isEmpty() )
        {
            txtName.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }
       
        if(txtAge.getText().equals(null) || txtAge.getText().trim().isEmpty())
        {
            txtAge.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtAge.setToolTipText("This Field Cannot be empty");
            emptyValidationStatus= false;
        }
        if(!txtAge.getText().equals(null) && !txtAge.getText().trim().isEmpty())
        {
            txtAge.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }
         if(txtHeight.getText().equals(null) || txtHeight.getText().trim().isEmpty())
        {
            txtHeight.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtHeight.setToolTipText("This Field Cannot be empty");
            emptyValidationStatus= false;
        }
         if(!txtHeight.getText().equals(null) && !txtHeight.getText().trim().isEmpty())
        {
            txtHeight.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }
        if(txtWeight.getText().equals(null) || txtWeight.getText().trim().isEmpty())
        {
            txtWeight.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtWeight.setToolTipText("This Field Cannot be empty");
            emptyValidationStatus= false;
        }
         if(!txtWeight.getText().equals(null) && !txtWeight.getText().trim().isEmpty())
        {
            txtWeight.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
            
        }
         
        if(txtAptNo.getText().equals(null) || txtAptNo.getText().trim().isEmpty())
        {
            txtAptNo.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtAptNo.setToolTipText("This Field Cannot be empty");
            emptyValidationStatus= false;
        }
        if(!txtAptNo.getText().equals(null) && !txtAptNo.getText().trim().isEmpty())
        {
            txtAptNo.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }
        
        
        if(txtStreet.getText().equals(null)|| txtStreet.getText().trim().isEmpty())
        {
            txtStreet.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtStreet.setToolTipText("This Field Cannot be empty");
            emptyValidationStatus= false;
        }
        if(!txtStreet.getText().equals(null) && !txtStreet.getText().trim().isEmpty())
        {
            txtStreet.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
           
        }
        
        if(txtMobileNo.getText().equals(null) || txtMobileNo.getText().trim().isEmpty())
        {
            txtMobileNo.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtMobileNo.setToolTipText("This Field Cannot be empty");
            emptyValidationStatus=false;
        }
        if(!txtMobileNo.getText().equals(null) && !txtMobileNo.getText().trim().isEmpty())
        {
            txtMobileNo.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }
        return emptyValidationStatus;
    }
    
    private void initCommunityCmbx() {
        CBoxCommunity.removeAllItems();
        int count = 0;
        var selectedCity=CBoxCity.getSelectedItem().toString();
        City city=City.valueOf(selectedCity);
        Community community=new Community();
        community.setLstCommunity();
        String[] communities=community.getLstCommunity().get(city);
            for (String community_ : communities) {
                CBoxCommunity.addItem(communities[count++]);
            }
    }
    
    private void initCityCmbx() {
       CBoxCity.removeAllItems();
       int count = 0;
        City[] cities = City.values();
        for (City city_ : cities) {
            CBoxCity.addItem(cities[count++].toString());
        }
       initCommunityCmbx();
    }
    
  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CBoxCity;
    private javax.swing.JComboBox<String> CBoxCommunity;
    private javax.swing.JComboBox<String> CBoxGender;
    private javax.swing.JComboBox<String> CBoxState;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblAptNo;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCommunity;
    private javax.swing.JLabel lblContactInfo;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblHeight;
    private javax.swing.JLabel lblMobileNo;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPersonalInfo;
    private javax.swing.JLabel lblSearchPatientID;
    private javax.swing.JLabel lblState;
    private javax.swing.JLabel lblStreet;
    private javax.swing.JLabel lblWeight;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtAptNo;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtHeight;
    private javax.swing.JTextField txtMobileNo;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtSearchPatientID;
    private javax.swing.JTextField txtStreet;
    private javax.swing.JTextField txtWeight;
    // End of variables declaration//GEN-END:variables

}
