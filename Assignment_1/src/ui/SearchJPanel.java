/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Employee;
import model.EmployeeHistory;

/**
 *
 * @author adityapande
 */
public class SearchJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SearchJPanel
     */
    
    EmployeeHistory employeelist;
    
    
    public SearchJPanel(EmployeeHistory employeeList) {
        initComponents();
        
        this.employeelist = employeeList;
        populateEmployeeTable();
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtEmployeeID = new javax.swing.JTextField();
        txtEmployeeName = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        btnSearchUsingID = new javax.swing.JButton();
        btnSearchUsingName = new javax.swing.JButton();
        btnAge = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmployees = new javax.swing.JTable();

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Search for Employee Info");

        jLabel2.setText("Employee ID");

        jLabel3.setText("Employee Name");

        jLabel4.setText("Age");

        txtAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAgeActionPerformed(evt);
            }
        });

        btnSearchUsingID.setText("Search Using ID");
        btnSearchUsingID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchUsingIDActionPerformed(evt);
            }
        });

        btnSearchUsingName.setText("Search Using Name");
        btnSearchUsingName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchUsingNameActionPerformed(evt);
            }
        });

        btnAge.setText("Search Age");
        btnAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgeActionPerformed(evt);
            }
        });

        tblEmployees.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "EMP ID", "EMP Name", "Start Date", "Gender", "Age", "Mobile Number", "Level", "Email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.Integer.class, java.lang.Long.class, java.lang.Object.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblEmployees);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtEmployeeID)
                    .addComponent(txtEmployeeName)
                    .addComponent(txtAge, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSearchUsingID, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSearchUsingName, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAge, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(107, 107, 107))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchUsingID))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtEmployeeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchUsingName))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAge))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(169, 169, 169))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgeActionPerformed

    private void btnAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgeActionPerformed
        // TODO add your handling code here:
        String age = txtAge.getText();
        ArrayList<Employee> employeeFilteredListByAge = new ArrayList<Employee>();
        for (Employee e: employeelist.getHistory()){
            if(age.equals(String.valueOf(e.getAge()))){
                employeeFilteredListByAge.add(e);
                
            }
        }
        populateEmployeeByFilters(employeeFilteredListByAge);
        txtAge.setText("");
        
        
        
    }//GEN-LAST:event_btnAgeActionPerformed

    private void btnSearchUsingIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchUsingIDActionPerformed
        // TODO add your handling code here:
        
        String id = txtEmployeeID.getText();
        ArrayList<Employee> employeeFilteredListById = new ArrayList<Employee>();
        for (Employee e: employeelist.getHistory()){
            if(id.equals(String.valueOf(e.getEmployee_ID()))){
                employeeFilteredListById.add(e);
                
            }
            
        
            
        }
        populateEmployeeByFilters(employeeFilteredListById);
        txtEmployeeID.setText("");
        
    }//GEN-LAST:event_btnSearchUsingIDActionPerformed

    private void btnSearchUsingNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchUsingNameActionPerformed
        // TODO add your handling code here:
        String employeeName = txtEmployeeName.getText();
        ArrayList<Employee> employeeFilteredListByName = new ArrayList<Employee>();
        for (Employee e: employeelist.getHistory()){
            if(e.getName().contains(employeeName)){
                employeeFilteredListByName.add(e);
                
            }
            populateEmployeeByFilters(employeeFilteredListByName);
        txtEmployeeName.setText("");
    }//GEN-LAST:event_btnSearchUsingNameActionPerformed

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAge;
    private javax.swing.JButton btnSearchUsingID;
    private javax.swing.JButton btnSearchUsingName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblEmployees;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtEmployeeID;
    private javax.swing.JTextField txtEmployeeName;
    // End of variables declaration//GEN-END:variables

    private void populateEmployeeTable() {
        DefaultTableModel model = (DefaultTableModel) tblEmployees.getModel();
        model.setRowCount(0);
        
        for (Employee es : employeelist.getHistory()){
            
            Object[] row = new Object[8];
            row[0] = es;
            row[1] = es.getName();
            SimpleDateFormat simpleDateFormat = new SimpleDateFormat("MM/dd/yy");
            String startDate = simpleDateFormat.format(es.getStart_date());
            row[2] = startDate;
            row[3] = es.getGender();
            row[4] = es.getAge();
            row[5] = es.getPhone_Number();
            row[6] = es.getLevel();
            row[7] = es.getEmail();
            
            model.addRow(row);
        }
    }

    private void populateEmployeeByFilters(ArrayList<Employee> employeeFilteredList) {
        DefaultTableModel model = (DefaultTableModel) tblEmployees.getModel();
        model.setRowCount(0);
        //Iterable<Employee> employeeFilteredlist;
        
        for (Employee es : employeeFilteredList){
            
            Object[] row = new Object[8];
            row[0] = es;
            row[1] = es.getName();
            SimpleDateFormat simpleDateFormat = new SimpleDateFormat("MM/dd/yy");
            String startDate = simpleDateFormat.format(es.getStart_date());
            row[2] = startDate;
            row[3] = es.getGender();
            row[4] = es.getAge();
            row[5] = es.getPhone_Number();
            row[6] = es.getLevel();
            row[7] = es.getEmail();
            
            model.addRow(row);
        }
    }
}
